{"version":3,"sources":["webpack:///src/app/system/shared/components/navbar/navbar.component.ts","webpack:///src/app/system/shared/components/navbar/navbar.component.html","webpack:///src/app/system/shared/services/bill.service.ts","webpack:///src/app/system/project/project-detail/project-detail.component.ts","webpack:///src/app/system/project/project-detail/project-detail.component.html","webpack:///src/app/system/bill/bill-card/bill-card.component.ts","webpack:///src/app/system/bill/bill-card/bill-card.component.html","webpack:///src/app/system/history-page/history-page.component.ts","webpack:///src/app/system/history-page/history-page.component.html","webpack:///src/app/system/shared/services/category.service.ts","webpack:///src/app/system/shared/services/event.service.ts","webpack:///src/app/shared/models/message.model.ts","webpack:///src/environments/environment.ts","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/shared/core/base-api.ts","webpack:///src/app/system/history-page/edit-history-form/edit-history-form.component.ts","webpack:///src/app/system/history-page/edit-history-form/edit-history-form.component.html","webpack:///src/app/authorization/registration/registration.component.ts","webpack:///src/app/authorization/registration/registration.component.html","webpack:///src/app/system/shared/models/project.model.ts","webpack:///src/app/system/project/project-charts/project-charts.component.ts","webpack:///src/app/system/project/project-charts/project-charts.component.html","webpack:///src/app/system/project/project-detail/category/category.component.ts","webpack:///src/app/system/project/project-detail/category/category.component.html","webpack:///src/app/system/project/project.component.ts","webpack:///src/app/system/project/project.component.html","webpack:///src/app/shared/models/user.model.ts","webpack:///src/app/system/report/report.component.ts","webpack:///src/app/system/report/report.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/system/shared/components/header/header.component.ts","webpack:///src/app/system/shared/components/header/header.component.html","webpack:///src/app/system/project/project-detail/category/edit-category-form/edit-category-form.component.ts","webpack:///src/app/system/project/project-detail/category/edit-category-form/edit-category-form.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/system/bill/bill-rate/bill-rate.component.ts","webpack:///src/app/system/bill/bill-rate/bill-rate.component.html","webpack:///src/app/authorization/login/login.component.ts","webpack:///src/app/authorization/login/login.component.html","webpack:///src/app/shared/services/authorization.service.ts","webpack:///src/app/system/shared/services/project.service.ts","webpack:///src/app/authorization/authorization.module.ts","webpack:///src/app/authorization/authorization-routing.module.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/system/bill/bill-transfer-form/bill-transfer-form.component.ts","webpack:///src/app/system/bill/bill-transfer-form/bill-transfer-form.component.html","webpack:///src/app/system/project/project-edit-form/project-edit-form.component.ts","webpack:///src/app/system/project/project-edit-form/project-edit-form.component.html","webpack:///src/app/system/bill/bill.component.ts","webpack:///src/app/system/bill/bill.component.html","webpack:///src/app/system/shared/models/event.model.ts","webpack:///src/app/system/shared/models/category.model.ts","webpack:///src/app/system/system.component.ts","webpack:///src/app/system/system.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/system/system.module.ts","webpack:///src/app/system/system-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["NavbarComponent","selector","templateUrl","styleUrls","BillService","httpClient","get","bill","put","base","transfer","ProjectDetailComponent","route","projectService","categoryService","dialog","isLoaded","outcomeChartData","incomeChartData","sub1","params","pipe","getProjectById","id","subscribe","pro","project","calculateChartData","getCategoryByProjectId","_id","categories","map","cat","unsubscribe","sub2","pdf","BillCardComponent","currency","HistoryPageComponent","eventService","refresh","isRowSelected","projectId","undefined","getEvents","events","filter","ev","date","Date","sortedActivities","sort","a","b","getEventByProjectId","x","print","fileName","printName","setTimeout","exportToPDF","event","selectedRow","selectedRows","dataItem","value","isNew","isDisabled","dialogRef","open","data","afterClosed","result","saveHandler","editDataItem","openDialog","deleteEvent","onRefresh","addEvent","updateEvent","grid","saveAsPDF","emit","ngOnInit","item","label","type","projectName","CategoriesService","category","post","EventsService","http","Message","text","environment","production","AuthorizationComponent","BaseApi","baseUrl","url","getUrl","headers","getHeaders","Authorization","JSON","parse","localStorage","getItem","user","EditHistoryFormComponent","viewMod","listType","listBill","projects","listCategory","listProject","readonlyPro","readonlyCat","editForm","required","amount","description","patchValue","disable","getCategories","push","console","log","getProjects","name","setValues","valueChanges","projectValue","mode","setValue","find","includes","bus","close","onCancel","RegistrationComponent","usersService","router","snackBar","form","email","password","minLength","agree","requiredTrue","message","action","duration","verticalPosition","createNewUser","navigate","queryParams","nowCanLogin","err","openSnackBar","error","reset","onSubmit","Project","earnings","consumption","profit","plannedProfit","relevance","active","userId","ProjectChartsComponent","colorScheme","domain","CategoryComponent","isSelectedRowBlank","income","outcome","deleteCategory","addCategory","updateCategory","ProjectComponent","isSelectedRowActive","showClosed","getActiveProjects","checked","updateProject","deleteProject","addProject","test","User","ReportComponent","_formBuilder","isLinear","isPrintCat","isPrintEv","qwe","pros","firstFormGroup","group","firstCtrl","secondFormGroup","secondCtrl","proId","proName","navigateByUrl","skipLocationChange","then","set","AppComponent","title","HeaderComponent","authService","window","logout","EditCategoryFormComponent","onSave","AppModule","declarations","imports","providers","bootstrap","BillRateComponent","currencies","LoginComponent","formData","login","setItem","stringify","token","AuthorizationService","isAuthenticated","clear","ProjectService","AuthorizationModule","routes","path","component","children","AuthorizationRoutingModule","forChild","exports","UsersService","providedIn","BillTransferFormComponent","transferData","bills","reverse","transferEvent","from","to","rate","change","ProjectEditFormComponent","BillComponent","billService","getBill","getCurrency","rates","EUR","transferBill","HistoryEvent","Category","ChartCategory","SystemComponent","changeDetectorRef","media","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","onLogout","redirectTo","pathMatch","AppRoutingModule","forRoot","SystemModule","SystemRoutingModule","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<aside class=\"sidebar\">\n  <div class=\"sidebar-container\">\n    <div class=\"sidebar-header\">\n      <div class=\"brand\">\n        <div class=\"logo\">\n          <i class=\"fas fa-user-circle fa-2x\"></i>\n        </div>\n        Admin panel\n      </div>\n    </div>\n    <nav class=\"menu\">\n      <ul class=\"nav metismenu\">\n        <li routerLinkActive=\"active\" >\n          <a [routerLink]=\"['/system','bill']\" > <i class=\"fas fa-city\"></i> City </a>\n        </li>\n        <li routerLinkActive=\"active\">\n          <a [routerLink]=\"['/system','bus']\" > <i class=\"fas fa-bus\"></i> Bus </a>\n        </li>\n        <li routerLinkActive=\"active\" >\n          <a [routerLink]=\"['/system','schedule']\" > <i class=\"fas fa-clipboard-list\"></i> Schedule </a>\n        </li>\n        <li routerLinkActive=\"active\" >\n          <a [routerLink]=\"['/system','worker']\" > <i class=\"fas fa-user-tie\"></i> Worker </a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</aside>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Bill} from '../models/bill.model';\nimport {BaseApi} from '../../../shared/core/base-api';\n\n@Injectable()\nexport class BillService extends BaseApi {\n  constructor(public httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  getBill(): Observable<Bill[]> {\n    return this.get('bill');\n  }\n\n  updateBill(bill: Bill): Observable<Bill> {\n    return this.put('bill', bill);\n  }\n\n  getCurrency(base: string = 'PLN'): Observable<any> {\n    return this.httpClient.get<any>(`https://api.exchangeratesapi.io/latest?base=${base}`);\n  }\n\n  transferBill(transfer: object): Observable<boolean> {\n    return this.put('bill/transfer', transfer);\n  }\n}\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {ProjectService} from '../../shared/services/project.service';\nimport {map, mergeMap, tap} from 'rxjs/operators';\nimport {Project} from '../../shared/models/project.model';\nimport {Category, ChartCategory} from '../../shared/models/category.model';\nimport {CategoriesService} from '../../shared/services/category.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {GridComponent} from '@progress/kendo-angular-grid';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: ['./project-detail.component.scss']\n})\nexport class ProjectDetailComponent implements OnInit , OnDestroy{\n\n  @ViewChild('pdf') pdf;\n\n  sub1: Subscription;\n  sub2: Subscription;\n  project: Project;\n  categories: Category;\n  isLoaded = false;\n  outcomeChartData = [];\n  incomeChartData = [];\n\n  constructor(private route: ActivatedRoute,\n              private projectService: ProjectService,\n              private categoryService: CategoriesService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.isLoaded = false;\n    this.sub1 = this.route.params.pipe(\n      mergeMap((params: Params) => this.projectService.getProjectById(params.id))\n    ).subscribe((pro: Project) => {\n      this.project = pro;\n      this.calculateChartData();\n    });\n  }\n\n  calculateChartData(): void {\n\n    this.categoryService.getCategoryByProjectId(this.project._id)\n      .subscribe(categories => {\n        this.outcomeChartData = categories.map(cat => new ChartCategory(cat, 'outcome'));\n        this.incomeChartData = categories.map(cat => new ChartCategory(cat, 'income'));\n      });\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n    if (this.sub2) {\n      this.sub2.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"pull-left\">\n  <button mat-raised-button color=\"primary\" [routerLink]=\"['/system','project']\">\n    <i class=\"fa fa-arrow-left fa-lg\"></i>\n  </button>\n</div>\n\n<div class=\"title-block\">\n\n  <h3 class=\"title pull-left\" *ngIf=\"isLoaded\">\n    {{project.name}} <span class=\"sparkline bar\"></span>\n  </h3>\n\n</div>\n<section class=\"section\">\n\n  <mat-spinner style=\"margin-left: 47%;\" *ngIf=\"!isLoaded\"></mat-spinner>\n\n  <div class=\"row\" *ngIf=\"isLoaded\">\n\n    <div class=\"col col-xs-12 col-sm-6 col-md-3 col-xl-3\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p> Earnings </p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{project.earnings | number:'1.0-2'}} {{project.currency}}</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" color=\"primary\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n    <!--<div class=\"w-100\"></div>-->\n\n    <div class=\"col col-xs-12 col-sm-6 col-md-3 col-xl-3\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p> Consumption </p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{project.consumption | number:'1.0-2'}} {{project.currency}}</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" color=\"primary\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n    <div class=\"col col-xs-12 col-sm-6 col-md-3 col-xl-3\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p > Profit </p>\n          </mat-card-title>\n          <div style=\"width: 100%; text-align: right\">\n            <span\n              class=\"popup\"\n              matTooltip=\"Relatively to planned profit\"\n            >\n              {{(project.profit / project.plannedProfit) * 100 | number:'1.0-1'}}%\n            </span>\n          </div>\n\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{project.profit | number:'1.0-2'}} {{project.currency}}</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" color=\"primary\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n    <div class=\"col col-xs-12 col-sm-6 col-md-3 col-xl-3\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p> Relevance </p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{project.relevance | number:'1.1-1'}}%</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" color=\"accent\" value=\"{{project.relevance}}\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n  </div>\n\n  <div class=\"row\" *ngIf=\"isLoaded\">\n\n    <div class=\"col col-xs-12 col-sm-12 col-md-4 col-xl-4\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <h5>Categories</h5>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <app-category [projectId]=\"project._id\" (refresh)=\"ngOnInit()\">></app-category>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n    <div class=\"col col-xs-12 col-sm-12 col-md-4 col-xl-4\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <h5><span style=\"color: green\">Earnings </span>categories</h5>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <app-project-charts [data]=\"incomeChartData\"></app-project-charts>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n\n\n    <div class=\"col col-xs-12 col-sm-12 col-md-4 col-xl-4\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <h5><span style=\"color: red\">Consumption </span>categories</h5>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <app-project-charts [data]=\"outcomeChartData\"></app-project-charts>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n  </div>\n\n  <div *ngIf=\"isLoaded\">\n    <app-history-page [projectId]=\"project._id\" (refresh)=\"ngOnInit()\"></app-history-page>\n  </div>\n  <!--<app-project-history [projectId]=\"project._id\"></app-project-history>-->\n\n\n</section>\n\n\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Bill} from '../../shared/models/bill.model';\n\n@Component({\n  selector: 'app-bill-card',\n  templateUrl: './bill-card.component.html',\n  styleUrls: ['./bill-card.component.scss']\n})\nexport class BillCardComponent implements OnInit {\n\n  @Input() bill: Bill[];\n  @Input() currency: any;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col col-xs-12 col-sm-12 col-md-6 col-xl-6\">\n  <div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"col col-xs-12 col-sm-12 col-md-12 col-xl-12\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p>PLN Bill</p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{bill[0].value | number:'1.0-2'}} zł</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n    <div class=\"w-100\"></div>\n\n    <div class=\"col col-xs-12 col-sm-12 col-md-12 col-xl-12\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p>EUR Bill</p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{bill[1].value | number:'1.0-2'}} €</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n\n  </div>\n  </div>\n</div>\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {HistoryEvent} from '../shared/models/event.model';\nimport {Subscription} from 'rxjs';\nimport {EventsService} from '../shared/services/event.service';\nimport {SafeStyle} from '@angular/platform-browser';\nimport {GridComponent, SelectionEvent} from '@progress/kendo-angular-grid';\nimport {MatDialog} from '@angular/material/dialog';\nimport {EditHistoryFormComponent} from './edit-history-form/edit-history-form.component';\n\n@Component({\n  selector: 'app-history-page',\n  templateUrl: './history-page.component.html',\n  styleUrls: ['./history-page.component.scss']\n})\nexport class HistoryPageComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() projectId;\n  @Input() projectName;\n  @Input() print: boolean;\n  @Input() printName: string;\n  @Output() refresh = new EventEmitter<boolean>();\n\n  @ViewChild('grid') grid: GridComponent;\n\n  public events: HistoryEvent[];\n\n  constructor(private eventService: EventsService, public dialog: MatDialog) { }\n\n  isLoaded = false;\n  isRowSelected = false;\n  sub1: Subscription;\n  selectedRow;\n\n  public isNew: boolean;\n  public editDataItem: HistoryEvent;\n  public fileName;\n\n  ngOnInit(): void {\n    if (this.projectId === undefined) {\n      this.sub1 = this.eventService.getEvents().subscribe((events: HistoryEvent[]) =>\n      {\n        events.filter(ev => ev.date = new Date(ev.date));\n        // @ts-ignore\n        const sortedActivities = events.sort((a, b) => a.date - b.date);\n        // console.log(sortedActivities);\n        this.events = sortedActivities;\n        this.isLoaded = true;\n      });\n    } else {\n      this.sub1 = this.eventService.getEventByProjectId(this.projectId)\n        .subscribe(x => {\n          x.filter(ev => ev.date = new Date(ev.date));\n          // @ts-ignore\n          const sortedActivities = x.sort((a, b) => a.date - b.date);\n          this.events = sortedActivities;\n          this.isLoaded = true;\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.print === true) {\n      this.fileName = this.printName + '(history).pdf';\n      setTimeout(() => {\n        if (this.isLoaded === true) {\n          this.exportToPDF();\n        }\n      }, 3000);\n    }\n  }\n\n  onGridSelectionChange(event: SelectionEvent): void  {\n    this.selectedRow = event.selectedRows[0].dataItem;\n    this.isRowSelected = true;\n  }\n\n  openDialog(value, isNew: boolean, isDisabled?: boolean): void {\n    const dialogRef = this.dialog.open(EditHistoryFormComponent, {\n      data: {\n        isNew,\n        value,\n        isDisabled,\n        project: this.projectId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((result: HistoryEvent) => {\n      if (result != null) {\n        this.saveHandler(result, isNew);\n      }\n    });\n  }\n\n  public addHandler(): void {\n    this.editDataItem = new HistoryEvent();\n    this.isNew = true;\n    this.openDialog(this.editDataItem, this.isNew);\n  }\n\n  public editHandler(isDisabled?: boolean): void {\n    this.isNew = false;\n    this.openDialog(this.selectedRow, this.isNew, isDisabled);\n  }\n\n  public removeHandler(): void {\n    this.eventService.deleteEvent(this.selectedRow._id).subscribe( () => this.onRefresh());\n  }\n\n  public saveHandler(result: HistoryEvent, isNew: boolean): void {\n    if (isNew === true) {\n      this.eventService.addEvent(result).subscribe( () => this.onRefresh());\n    } else if (isNew === false) {\n      this.eventService.updateEvent(result).subscribe( () => this.onRefresh());\n    }\n  }\n\n  public exportToPDF(): void {\n    this.grid.saveAsPDF();\n    this.refresh.emit(true);\n  }\n\n\n\n  public onRefresh(): void {\n    this.isLoaded = false;\n    this.refresh.emit(true);\n    this.ngOnInit();\n  }\n\n  public getClass(item: HistoryEvent): SafeStyle {\n\n    return {\n      label: true,\n      'label-danger': item.type === 'OUTCOME',\n      'label-success': item.type === 'INCOME'\n    };\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"title-block\" *ngIf=\"projectId === undefined\">\n  <h3 class=\"title pull-left\">\n    History <span class=\"sparkline bar\"></span>\n  </h3>\n  <!--<div class=\"pull-right\">\n    <button mat-raised-button color=\"primary\" (click)=\"pdf.saveAs('test.pdf')\">\n      <i class=\"fa fa-refresh fa-lg\"></i>\n    </button>\n  </div>-->\n</div>\n<mat-spinner style=\"margin-left: 47%;\" *ngIf=\"!isLoaded\"></mat-spinner>\n<!--<kendo-pdf-export #pdf paperSize=\"A4\" landscape=\"true\" margin=\"2cm\" [scale]=\"0.5\" >-->\n<kendo-grid\n  *ngIf=\"isLoaded\"\n  [kendoGridBinding]=\"events\"\n  [style.height.%]=\"100\"\n  [selectable]=\"{enabled: true }\"\n  (selectionChange)='onGridSelectionChange($event)'\n  (add)=\"addHandler()\"\n  (edit)=\"editHandler()\"\n  (remove)=\"removeHandler()\"\n  [pageable]=\"true\" [pageSize]=\"10\"\n  #grid=\"kendoGrid\"\n>\n  <ng-template kendoGridToolbarTemplate>\n    <button kendoGridAddCommand [primary]=\"true\">Add new</button>\n    <button kendoButton [primary]=\"true\" [disabled]=\"!isRowSelected\" (click)=\"editHandler(true)\">View</button>\n    <button kendoGridEditCommand [primary]=\"true\" [disabled]=\"!isRowSelected\">Edit</button>\n    <button kendoGridRemoveCommand [primary]=\"true\" [disabled]=\"!isRowSelected\">Delete</button>\n    <!--<button class=\"k-button\" (click)=\"exportToPDF()\">Export Grid to PDF...</button>\n    <button kendoGridPDFCommand >Export to PDF</button>-->\n  </ng-template>\n  <kendo-grid-column field=\"amount\" title=\"Amount\" [headerStyle]=\"{'font-size' : '1.2rem'}\" width=\"120\"></kendo-grid-column>\n  <kendo-grid-column field=\"bill\" title=\"Bill\" [headerStyle]=\"{'font-size' : '17px'}\" width=\"120\"></kendo-grid-column>\n  <kendo-grid-column field=\"date\" title=\"Date\" [format]=\"{ date: 'long' }\" [headerStyle]=\"{'font-size' : '17px'}\" width=\"120\"></kendo-grid-column>\n  <kendo-grid-column field=\"project\" title=\"Project\" *ngIf=\"projectId === undefined\" [headerStyle]=\"{'font-size' : '17px'}\" width=\"120\"></kendo-grid-column>\n  <kendo-grid-column field=\"category\" title=\"Category\" [headerStyle]=\"{'font-size' : '17px'}\" width=\"130\"></kendo-grid-column>\n  <kendo-grid-column field=\"type\" title=\"Type\" [headerStyle]=\"{'font-size' : '17px'}\" width=\"120\">\n\n    <ng-template kendoGridCellTemplate let-dataItem>\n              <span [ngClass]=\"getClass(dataItem)\">\n                {{ dataItem.type }}\n              </span>\n    </ng-template>\n  </kendo-grid-column>\n\n  <kendo-grid-pdf [fileName]=\"fileName\" [allPages]=\"true\" paperSize=\"A4\" [repeatHeaders]=\"true\" [landscape]=\"true\" [scale]=\"0.8\">\n    <kendo-grid-pdf-margin top=\"2cm\" left=\"1cm\" right=\"1cm\" bottom=\"2cm\"></kendo-grid-pdf-margin>\n    <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n      <div class=\"page-template\">\n        <div class=\"header1\">\n          <!--<div style=\"float: right\">Page {{ pageNum }} of {{ totalPages }}</div>-->\n          {{projectName}} Report (history)\n        </div>\n        <div class=\"footer1\">\n          Page {{ pageNum }} of {{ totalPages }}\n        </div>\n      </div>\n    </ng-template>\n  </kendo-grid-pdf>\n\n</kendo-grid>\n<!--</kendo-pdf-export>-->\n","import {BaseApi} from '../../../shared/core/base-api';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Category} from '../models/category.model';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class CategoriesService extends BaseApi {\n  constructor(public httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  addCategory(category: Category): Observable<Category> {\n    return this.post('categories', category);\n  }\n\n  getCategories(): Observable<Category[]> {\n    return this.get('categories');\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.put(`categories/${category._id}`, category);\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    return this.delete(`categories/${id}`);\n  }\n\n  getCategoryById(id: string): Observable<Category> {\n    return this.get(`categories/${id}`);\n  }\n\n  getCategoryByProjectId(id: string): Observable<Category[]> {\n    return this.get(`categories/pro/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport { BaseApi } from '../../../shared/core/base-api';\nimport { HistoryEvent } from '../models/event.model';\n\n@Injectable()\nexport class EventsService extends BaseApi {\n  constructor(public http: HttpClient) {\n    super(http);\n  }\n\n  addEvent(event: HistoryEvent): Observable<HistoryEvent> {\n    return this.post('events', event);\n  }\n  getEvents(): Observable<HistoryEvent[]> {\n    return this.get('events');\n  }\n  getEventById(id: string): Observable<HistoryEvent> {\n    return this.get(`events/${id}`);\n  }\n\n  deleteEvent(id: string): Observable<HistoryEvent> {\n    return this.delete(`events/${id}`);\n  }\n\n  updateEvent(event: HistoryEvent): Observable<HistoryEvent> {\n    return this.put(`events/${event._id}`, event);\n  }\n\n  getEventByProjectId(id: string): Observable<HistoryEvent[]> {\n    return this.get(`events/pro/${id}`);\n  }\n}\n","export class Message {\n  constructor(\n    public type: string,\n    public text: string\n  ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.scss']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"auth\">\n  <div class=\"auth-container\">\n    <div class=\"card\">\n      <header class=\"auth-header\">\n        <h1 class=\"auth-title\">\n          <div class=\"logo\">\n            <i class=\"fas fa-user-tie\"></i>\n          </div>\n          Money Manger\n        </h1>\n      </header>\n      <div class=\"auth-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class BaseApi {\n\n  // private baseUrl = 'http://localhost:5000/api/';\n  // private baseUrl = 'http://192.168.0.11:5000/api/';\n  private baseUrl = '/api/';\n\n  constructor(public httpClient: HttpClient) {\n\n  }\n\n  static getHeaders(): HttpHeaders {\n    return new HttpHeaders({\n      Authorization: `jwt ${JSON.parse(localStorage.getItem('token'))}`,\n      user: JSON.parse(localStorage.getItem('user'))\n    });\n  }\n\n\n  private getUrl(url: string = ''): string {\n    return this.baseUrl + url;\n  }\n\n  public get(url: string = ''): Observable<any> {\n    return this.httpClient.get<any>(this.getUrl(url), {\n      headers: BaseApi.getHeaders()\n    });\n  }\n\n  public post(url: string = '', data: any = {}): Observable<any> {\n    return this.httpClient.post<any>(this.getUrl(url), data, {\n      headers: BaseApi.getHeaders()\n    });\n  }\n\n  public put(url: string = '', data: any = {}): Observable<any> {\n    return this.httpClient.put<any>(this.getUrl(url), data, {\n      headers: BaseApi.getHeaders()\n    });\n  }\n\n  public delete(url: string = ''): Observable<any> {\n    return this.httpClient.delete<any>(this.getUrl(url), {\n      headers: BaseApi.getHeaders()\n    });\n  }\n\n}\n","import {Component, Inject, Input, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {HistoryEvent} from '../../shared/models/event.model';\nimport {Subscription} from 'rxjs';\nimport {CategoriesService} from '../../shared/services/category.service';\nimport {ProjectService} from '../../shared/services/project.service';\nimport {tap} from 'rxjs/operators';\n\n\n\n\n@Component({\n  selector: 'app-edit-history-form',\n  templateUrl: './edit-history-form.component.html',\n  styleUrls: ['./edit-history-form.component.scss']\n})\nexport class EditHistoryFormComponent implements OnInit, OnDestroy {\n\n  public viewMod = false;\n  sub1: Subscription;\n  sub2: Subscription;\n\n  public listType: Array<string> = ['INCOME', 'OUTCOME'];\n  public listBill: Array<string> = ['PLN', 'EUR'];\n  public projects = [];\n  public categories = [];\n  public listCategory = [];\n  public listProject = [];\n  public readonlyPro = false;\n  public readonlyCat = false;\n\n\n  public editForm: FormGroup = new FormGroup({\n    _id: new FormControl(),\n    type: new FormControl(null, Validators.required),\n    amount: new FormControl(null, Validators.required),\n    project: new FormControl(null, Validators.required),\n    category: new FormControl(null, Validators.required),\n    date: new FormControl(null, Validators.required),\n    description: new FormControl(null, Validators.required),\n    bill: new FormControl(null, Validators.required)\n  });\n\n\n  constructor(\n    public dialogRef: MatDialogRef<EditHistoryFormComponent>,\n    private categoryService: CategoriesService,\n    private projectService: ProjectService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    if (data.isNew === false) {\n      this.editForm.patchValue({\n        _id: data.value._id,\n        type: data.value.type,\n        amount: data.value.amount,\n        project: data.value.project,\n        category: data.value.category,\n        date: new Date(data.value.date),\n        description: data.value.description,\n        bill: data.value.bill\n      });\n      if (data.isDisabled === true) {\n        this.editForm.disable();\n        this.viewMod = true;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.sub1 = this.categoryService.getCategories()\n      .pipe(\n        tap(categories => categories.map(category => this.categories.push(category))),\n\n      ).subscribe();\n\n    if (this.data.project !== undefined) {\n      console.log(this.data.project , 'qwe');\n    }\n\n    this.sub2 = this.projectService.getProjects()\n      .pipe(\n        tap(projects => projects.map(pro => this.listProject.push(pro.name))),\n        tap(projects => projects.map( pro => this.projects.push(pro))),\n      ).subscribe(() => {\n        if (this.editForm.get('project').value !== null) {\n          this.setValues(this.editForm.get('project').value, 'edit');\n        } else if (this.editForm.get('project').value === null) {\n          this.setValues(this.editForm.get('project').value, 'new');\n        }\n      });\n\n    this.editForm.get('project').valueChanges.subscribe(\n      projectValue => this.setValues(projectValue, 'reset'));\n  }\n\n  setValues(projectValue: string, mode: string): void {\n    this.listCategory = [];\n    if (mode === 'reset') {\n      this.editForm.get('category').setValue('');\n    }\n    if (mode !== 'new') {\n      const project = this.projects\n        .find(pro => pro.name === projectValue);\n\n      this.editForm.get('bill').setValue(project.currency);\n\n      this.categories.filter(category => category.projectId.includes(project._id))\n        .filter( cat => this.listCategory.push(cat.name));\n    }\n\n    if (mode === 'edit') {\n      // this.editForm.get('category').disable();\n      // this.readonly = true;\n      this.readonlyPro = true;\n      this.readonlyCat = true;\n    }\n\n    if (mode === 'new' && this.data.project !== undefined) {\n      const project = this.projects\n        .find(pro => pro._id === this.data.project);\n      this.editForm.get('project').setValue(project.name);\n      // this.editForm.get('project').disable();\n      this.readonlyPro = true;\n    }\n  }\n\n  public onSave(): void {\n    const bus = new HistoryEvent(this.editForm.value);\n    this.dialogRef.close(bus);\n  }\n\n  public onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n    if (this.sub2) {\n      this.sub2.unsubscribe();\n    }\n  }\n\n}\n","<!--<kendo-dialog *ngIf=\"active\" >\n  <kendo-dialog-titlebar>qwe\n  </kendo-dialog-titlebar>\n\n  <form  [formGroup]=\"editForm\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"form-group\">\n          <label for=\"type\" class=\"control-label\">Type</label>\n          <label for=\"type\" class=\"control-label\"> Type\n            <input type=\"text\" class=\"k-textbox\" formControlName=\"type\"/>\n          </label>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <kendo-dialog-actions>\n    <button class=\"k-button\">Cancel</button>\n    <button class=\"k-button k-primary\">Save</button>\n  </kendo-dialog-actions>\n</kendo-dialog>-->\n\n\n<h1 mat-dialog-title>{{ data.isNew ? 'Add new Event' : 'Event' }}</h1>\n<div mat-dialog-content>\n  <form novalidate [formGroup]=\"editForm\">\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"project\" class=\"control-label\">Project</label>\n          <kendo-dropdownlist\n            formControlName=\"project\"\n            [data]=\"listProject\"\n            width=\"100\"\n            [readonly] = readonlyPro\n          >\n          </kendo-dropdownlist>\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"category\" class=\"control-label\">Category</label>\n          <kendo-dropdownlist formControlName=\"category\" [data]=\"listCategory\" width=\"100\" [readonly] = readonlyCat>\n          </kendo-dropdownlist>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"amount\" class=\"control-label\">Amount</label>\n          <kendo-numerictextbox\n            [min]=\"0\" [autoCorrect]=\"true\" formControlName=\"amount\">\n          </kendo-numerictextbox>\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"bill\" class=\"control-label\">Bill</label>\n          <kendo-dropdownlist formControlName=\"bill\" [data]=\"listBill\" width=\"100\" readonly = \"true\">\n          </kendo-dropdownlist>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"type\" class=\"control-label\">Type</label>\n          <kendo-dropdownlist formControlName=\"type\" [data]=\"listType\" width=\"100\">\n          </kendo-dropdownlist>\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"date\" class=\"control-label\">Date</label>\n          <!--<input type=\"text\" class=\"k-textbox\" formControlName=\"date\"/>-->\n          <kendo-datepicker formControlName=\"date\" [format]=\"'dd-MMM-yyyy'\"></kendo-datepicker>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-12\">\n        <div class=\"form-group\">\n          <label for=\"description\" class=\"control-label\">Description</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"description\"/>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-button style=\"width: 48%\" (click)=\"onCancel()\">{{ viewMod ? 'Close' : 'Cancel' }}</button>\n  <button mat-button style=\"width: 48%\" (click)=\"onSave()\" *ngIf=\"!viewMod\" [disabled]=\"editForm.invalid\">Save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\nimport {UsersService} from '../../shared/services/user.service';\nimport { User } from '../../shared/models/user.model';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor( private usersService: UsersService,\n               private router: Router,\n               private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n      name: new FormControl(null, [Validators.required]),\n      agree: new FormControl(false, [Validators.requiredTrue])\n    });\n  }\n\n  private openSnackBar(message: string, action?: string): void {\n    this.snackBar.open(message, action, {\n      duration: 7000, verticalPosition : 'bottom'\n    });\n  }\n\n  onSubmit(): void {\n    const {email, password, name} = this.form.value;\n    const user = new User(email, password, name);\n\n    this.usersService.createNewUser(user)\n      .subscribe(() => {\n        this.router.navigate(['/login'],\n          {queryParams: {\n              nowCanLogin: true\n            }\n          });\n      }, (err: HttpErrorResponse) => {\n        this.openSnackBar(err.error.message);\n        this.form.reset();\n      });\n  }\n}\n\n","<p class=\"text-xs-center\">Registration for access...</p>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" >\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('email').invalid && form.get('email').touched}\"\n  >\n    <label for=\"email\">Email</label>\n    <kendo-textbox\n      id=\"email\"\n      placeholder=\"Enter your email\"\n      formControlName=\"email\"\n    ></kendo-textbox>\n    <span\n      class=\"form-help-text\"\n      *ngIf=\"form.get('email').invalid && form.get('email').touched\"\n    >\n      <span *ngIf=\"form.get('email')['errors']['required']\">Email cannot be empty.</span>\n      <span *ngIf=\"form.get('email')['errors']['email']\">Enter the correct email.</span>\n      <span *ngIf=\"form.get('email')['errors']['sameEmail']\">Email already taken.</span>\n    </span>\n  </div>\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('password').invalid && form.get('password').touched}\"\n  >\n    <label for=\"password\">Password</label>\n    <kendo-textbox\n      id=\"password\"\n      placeholder=\"Enter your password\"\n      formControlName=\"password\"\n    ></kendo-textbox>\n    <span\n      class=\"form-help-text\"\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\n    >\n      <span *ngIf=\"form.get('password')['errors']['required']\">Password cannot be empty.</span>\n      <span *ngIf=\"form.get('password')['errors']['minlength'] && form.get('password')['errors']['minlength'] ['requiredLength']\">\n        The password must contain at least\n        {{form.get('password')['errors']['minlength'] ['requiredLength']}}\n        characters. Now {{form.get('password')['errors']['minlength'] ['actualLength']}}\n      </span>\n    </span>\n  </div>\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('name').invalid && form.get('name').touched}\"\n  >\n    <label for=\"name\">Company name</label>\n    <kendo-textbox\n      id=\"name\"\n      placeholder=\"Enter your company name\"\n      formControlName=\"name\"\n    ></kendo-textbox>\n    <span\n      class=\"form-help-text\"\n      *ngIf=\"form.get('name').invalid && form.get('name').touched\"\n    >\n      Company name cannot be empty\n    </span>\n  </div>\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('agree').invalid && form.get('agree').touched}\"\n  >\n    <!--<label for=\"agree\">\n      <input\n        class=\"checkbox\"\n        id=\"agree\"\n        type=\"checkbox\"\n        formControlName=\"agree\"\n      >\n      <mat-checkbox id=\"agree\" formControlName=\"agree\" color=\"primary\">I agree with the rules</mat-checkbox>\n      <span>I agree with the rules</span>\n    </label>-->\n    <mat-checkbox id=\"agree\" formControlName=\"agree\" color=\"primary\">I agree with the rules</mat-checkbox>\n  </div>\n  <div class=\"form-group\">\n    <!--<button\n      type=\"submit\"\n      class=\"btn btn-block btn-primary\"\n      [disabled]=\"form.invalid\"\n    >\n      Sign up</button>-->\n    <button mat-raised-button type=\"submit\" [disabled]=\"form.invalid\" color=\"primary\" style=\"width: 100%\">Sign up</button>\n  </div>\n  <div class=\"form-group\">\n    <p class=\"text-muted text-xs-center\">\n      Already have an account?\n      <br>\n      <a [routerLink]=\"'/login'\">Sign in!</a>\n    </p>\n  </div>\n</form>\n","export class Project {\n\n  // tslint:disable-next-line:variable-name\n  public _id?: string;\n  public name: string;\n  public earnings: number;\n  public consumption: number;\n  public profit: number;\n  public plannedProfit: number;\n  public relevance: number;\n  public currency: string;\n  public active: boolean;\n  public userId: string;\n\n  constructor(item?) {\n    if (item != null) {\n      this._id = item._id;\n      this.name = item.name;\n      this.earnings = item.earnings;\n      this.consumption = item.consumption;\n      this.profit = item.profit;\n      this.plannedProfit = item.plannedProfit;\n      this.relevance = item.relevance;\n      this.currency = item.currency;\n      this.active = item.active;\n      this.userId = item.userId;\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-project-charts',\n  templateUrl: './project-charts.component.html',\n  styleUrls: ['./project-charts.component.scss']\n})\nexport class ProjectChartsComponent implements OnInit {\n\n  @Input() data;\n\n  colorScheme = {\n    domain: ['#DFFF00', '#FFBF00', '#FF7F50', '#DE3163', '#9FE2BF', '#40E0D0', '#6495ED', '#CCCCFF']\n  };\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div #containerRef class=\"chart-center\">\n  <ngx-charts-pie-chart\n    [view]=\"[containerRef.offsetWidth, 400]\"\n    [animations]=\"true\"\n    [results]=\"data\"\n    [legend]=\"true\"\n    [scheme]=\"colorScheme\"\n    [legendPosition]=\"'below'\"\n    [explodeSlices]=\"false\"\n    [labels]=\"true\"\n    [doughnut]=\"false\">\n  </ngx-charts-pie-chart>\n</div>\n\n","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CategoriesService} from '../../../shared/services/category.service';\nimport {Category} from '../../../shared/models/category.model';\nimport {EditCategoryFormComponent} from './edit-category-form/edit-category-form.component';\nimport {GridComponent, SelectionEvent} from '@progress/kendo-angular-grid';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @Input() projectId;\n  @Input() projectName;\n  @Input() printName: string;\n  @Input() print: boolean;\n  @Output() refresh = new EventEmitter<boolean>();\n\n  @ViewChild('grid') grid: GridComponent;\n\n  sub1: Subscription;\n  isLoaded = false;\n  isRowSelected = false;\n  isSelectedRowBlank = false;\n  selectedRow: Category;\n\n  public categories: Category[];\n  public isNew: boolean;\n  public editDataItem: Category;\n  public fileName;\n\n\n  constructor(private categoryService: CategoriesService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.sub1 = this.categoryService.getCategoryByProjectId(this.projectId).subscribe((categories: Category[]) =>\n    {\n      this.categories = categories;\n      this.isLoaded = true;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    if (this.print === true) {\n      this.fileName = this.printName + '(category).pdf';\n      setTimeout(() => {\n        if (this.isLoaded === true) {\n          this.exportToPDF();\n        }\n      }, 3000);\n    }\n  }\n\n  public exportToPDF(): void {\n    this.grid.saveAsPDF();\n    this.refresh.emit(true);\n  }\n\n  onGridSelectionChange(event: SelectionEvent): void  {\n    this.selectedRow = event.selectedRows[0].dataItem;\n    this.isSelectedRowBlank = this.selectedRow.income === 0 && this.selectedRow.outcome === 0;\n    this.isRowSelected = true;\n  }\n\n  openDialog(value, isNew: boolean): void {\n    const dialogRef = this.dialog.open(EditCategoryFormComponent, {\n      data: {\n        isNew,\n        value\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((result: Category) => {\n      if (result != null) {\n        this.saveHandler(result, isNew);\n      }\n    });\n  }\n\n  public addHandler(): void {\n    this.editDataItem = new Category();\n    this.isNew = true;\n    this.openDialog(this.editDataItem, this.isNew);\n  }\n\n  public editHandler(): void {\n    this.isNew = false;\n    this.openDialog(this.selectedRow, this.isNew);\n  }\n\n  public removeHandler(): void {\n    this.categoryService.deleteCategory(this.selectedRow._id).subscribe( () => this.onRefresh());\n  }\n\n  public saveHandler(result: Category, isNew: boolean): void {\n    if (isNew === true) {\n      result.projectId = this.projectId;\n      this.categoryService.addCategory(result).subscribe( () => this.onRefresh());\n    } else if (isNew === false) {\n      this.categoryService.updateCategory(result).subscribe( () => this.onRefresh());\n    }\n  }\n\n  public onRefresh(): void {\n    this.isLoaded = false;\n    this.refresh.emit(true);\n    this.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n  }\n\n}\n","<!--<mat-spinner style=\"margin-left: 47%;\" *ngIf=\"!isLoaded\"></mat-spinner>-->\n<kendo-grid\n  *ngIf=\"isLoaded\"\n  [data]=\"categories\"\n  [style.height.px]=\"458\"\n  [selectable]=\"{enabled: true }\"\n  (selectionChange)='onGridSelectionChange($event)'\n  (add)=\"addHandler()\"\n  #grid=\"kendoGrid\"\n>\n  <ng-template kendoGridToolbarTemplate>\n    <button kendoGridAddCommand [primary]=\"true\">Add new</button>\n    <button kendoButton [primary]=\"true\" [disabled]=\"!isRowSelected\" (click)=\"editHandler()\">Edit</button>\n    <button kendoButton [primary]=\"true\" [disabled]=\"!(isRowSelected && isSelectedRowBlank)\" (click)=\"removeHandler()\">Delete</button>\n  </ng-template>\n  <kendo-grid-column field=\"name\" title=\"Name\" [headerStyle]=\"{'font-size' : '14px'}\" width=\"100\"></kendo-grid-column>\n  <kendo-grid-column field=\"income\" title=\"Income\" [headerStyle]=\"{'font-size' : '14px'}\" width=\"110\"></kendo-grid-column>\n  <kendo-grid-column field=\"outcome\" title=\"Outcome\"  [headerStyle]=\"{'font-size' : '14px'}\" width=\"115\"></kendo-grid-column>\n\n  <kendo-grid-pdf [fileName]=\"fileName\"   paperSize=\"A4\" [repeatHeaders]=\"true\" [landscape]=\"false\" [scale]=\"1\">\n    <kendo-grid-pdf-margin top=\"2cm\" left=\"1cm\" right=\"1cm\" bottom=\"2cm\"></kendo-grid-pdf-margin>\n    <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n      <div class=\"page-template\">\n        <div class=\"header1\">\n          {{projectName}} Report (categories)\n        </div>\n        <div class=\"footer1\">\n          Page {{ pageNum }} of {{ totalPages }}\n        </div>\n      </div>\n    </ng-template>\n  </kendo-grid-pdf>\n\n</kendo-grid>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ProjectService} from '../shared/services/project.service';\nimport {Project} from '../shared/models/project.model';\nimport {SelectionEvent} from '@progress/kendo-angular-grid';\nimport {Router} from '@angular/router';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ProjectEditFormComponent} from './project-edit-form/project-edit-form.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit, OnDestroy {\n\n  public projects: Project[];\n\n  constructor(private projectService: ProjectService, private router: Router, public dialog: MatDialog) { }\n\n  isLoaded = true;\n  sub1: Subscription;\n  isRowSelected = false;\n  selectedRow: Project;\n  isSelectedRowBlank = false;\n  isSelectedRowActive = false;\n  isNew: boolean;\n  showClosed = false;\n  public editDataItem: Project;\n\n  ngOnInit(): void {\n    if (!this.showClosed) {\n      this.sub1 = this.projectService.getActiveProjects()\n        .subscribe(projects => this.projects = projects);\n    } else {\n      this.sub1 = this.projectService.getProjects()\n        .subscribe(projects => this.projects = projects);\n    }\n  }\n\n  onGridSelectionChange(event: SelectionEvent): void  {\n    this.selectedRow = event.selectedRows[0].dataItem;\n    this.isSelectedRowBlank = this.selectedRow.earnings === 0 && this.selectedRow.consumption === 0;\n    this.isSelectedRowActive = this.selectedRow.active;\n    this.isRowSelected = true;\n  }\n\n  test(event): void {\n    // console.log(event.checked);\n    this.showClosed = event.checked;\n    this.onRefresh();\n  }\n\n  closeProject(): void {\n    this.selectedRow.active = false;\n    console.log(this.selectedRow);\n    this.projectService.updateProject(this.selectedRow).subscribe(() => this.onRefresh());\n  }\n\n  public openProject(): void {\n    this.router.navigate(['system/project', this.selectedRow._id]);\n  }\n\n  openDialog(value, isNew: boolean): void {\n    const dialogRef = this.dialog.open(ProjectEditFormComponent, {\n      data: {\n        isNew,\n        value\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((result: Project) => {\n      if (result != null) {\n        console.log(result);\n        this.saveHandler(result, isNew);\n      }\n    });\n  }\n\n  public addHandler(): void {\n    this.editDataItem = new Project();\n    this.isNew = true;\n    this.openDialog(this.editDataItem, this.isNew);\n  }\n\n  public editHandler(): void {\n    this.isNew = false;\n    this.openDialog(this.selectedRow, this.isNew);\n  }\n\n  public removeHandler(): void {\n    this.projectService.deleteProject(this.selectedRow._id).subscribe( () => this.onRefresh());\n  }\n\n  public saveHandler(result: Project, isNew: boolean): void {\n    if (isNew === true) {\n      this.projectService.addProject(result).subscribe( () => this.onRefresh());\n    } else if (isNew === false) {\n      this.projectService.updateProject(result).subscribe( () => this.onRefresh());\n    }\n  }\n\n  public onRefresh(): void {\n    this.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"title-block\">\n  <h3 class=\"title pull-left\">\n    Projects <span class=\"sparkline bar\"></span>\n  </h3>\n  <div class=\"pull-right\">\n    <mat-slide-toggle\n      class=\"example-margin\"\n      color=\"primary\"\n      (change)=\"test($event)\">\n      (Show closed projects)\n    </mat-slide-toggle>\n  </div>\n</div>\n\n<mat-spinner style=\"margin-left: 47%;\" *ngIf=\"!isLoaded\"></mat-spinner>\n<kendo-grid\n  *ngIf=\"isLoaded\"\n  [data]=\"projects\"\n  [style.height.%]=\"100\"\n  [selectable]=\"{enabled: true }\"\n  (selectionChange)='onGridSelectionChange($event)'\n  (add)=\"addHandler()\"\n  (edit)=\"editHandler()\"\n>\n  <ng-template kendoGridToolbarTemplate>\n    <button kendoButton [primary]=\"true\" [disabled]=\"!isRowSelected\" (click)=\"openProject()\">Open</button>\n    <button kendoGridAddCommand [primary]=\"true\">Add</button>\n    <button kendoGridEditCommand [primary]=\"true\" [disabled]=\"!isRowSelected\">Edit</button>\n    <button kendoButton [primary]=\"true\" *ngIf=\"(isRowSelected && isSelectedRowBlank)\" (click)=\"removeHandler()\">Delete</button>\n    <button kendoButton [primary]=\"true\" *ngIf=\"(isRowSelected && isSelectedRowActive && !isSelectedRowBlank)\" (click)=\"closeProject()\">Close</button>\n   </ng-template>\n   <kendo-grid-column\n     field=\"name\" title=\"Name\"\n     [headerStyle]=\"{'font-size' : '1.2rem'}\"\n     width=\"120\"\n   >\n   </kendo-grid-column>\n   <kendo-grid-column\n     field=\"earnings\"\n     title=\"Earnings\"\n     [headerStyle]=\"{'font-size' : '17px'}\"\n     width=\"125\"\n   >\n     <ng-template kendoGridCellTemplate let-dataItem>\n          <span [style.color]=\"'green'\">\n            {{ dataItem.earnings | number:'1.0-2'}} {{ dataItem.currency }}\n          </span>\n     </ng-template>\n   </kendo-grid-column>\n   <kendo-grid-column\n     field=\"consumption\"\n     title=\"Consumption\"\n     [headerStyle]=\"{'font-size' : '17px'}\"\n     width=\"160\"\n   >\n     <ng-template kendoGridCellTemplate let-dataItem>\n          <span [style.color]=\"'red'\">\n            -{{ dataItem.consumption | number:'1.0-2'}} {{ dataItem.currency }}\n          </span>\n     </ng-template>\n   </kendo-grid-column>\n   <kendo-grid-column\n     field=\"profit\"\n     title=\"Profit\"\n     [headerStyle]=\"{'font-size' : '17px'}\"\n     width=\"120\"\n   >\n     <ng-template kendoGridCellTemplate let-dataItem>\n          <span>\n            {{ dataItem.profit | number:'1.0-2'}} {{ dataItem.currency }}\n          </span>\n     </ng-template>\n   </kendo-grid-column>\n   <kendo-grid-column\n     field=\"relevance\"\n     title=\"Relevance\"\n     [format]=\"'# \\\\%'\"\n     [headerStyle]=\"{'font-size' : '17px'}\"\n     width=\"135\"\n   >\n   </kendo-grid-column>\n  <kendo-grid-column\n    field=\"active\"\n    title=\"Active\"\n    [headerStyle]=\"{'font-size' : '17px'}\"\n    width=\"135\"\n    *ngIf=\"showClosed\"\n  >\n  </kendo-grid-column>\n</kendo-grid>\n","export class User {\n  constructor(\n    public email: string,\n    public password: string,\n    public name: string,\n    // tslint:disable-next-line:variable-name\n    public _id?: string\n  ) { }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ProjectService} from '../shared/services/project.service';\nimport {Project} from '../shared/models/project.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss']\n})\nexport class ReportComponent implements OnInit, OnDestroy {\n\n  isLinear = true;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isPrintCat = false;\n  isPrintEv = false;\n  sub1: Subscription;\n  pros: Project[];\n  proName;\n  proId;\n  printName;\n  qwe = {\n    name: 'All',\n    value: 'undefined'\n  };\n\n  // tslint:disable-next-line:variable-name\n  constructor(private _formBuilder: FormBuilder, private projectService: ProjectService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    this.sub1 = this.projectService.getProjects().subscribe(projects => this.pros = projects);\n\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n\n  set(): void {\n    this.printName = this.secondFormGroup.value.secondCtrl;\n\n    if (this.firstFormGroup.value.firstCtrl === 'undefined') {\n      this.proId = undefined;\n      this.isPrintEv = true;\n    } else {\n      const project = this.pros.find(x => x._id === this.firstFormGroup.value.firstCtrl);\n      this.proName = project.name;\n      this.proId = this.firstFormGroup.value.firstCtrl;\n      this.isPrintCat = true;\n      this.isPrintEv = true;\n    }\n  }\n\n  public onRefresh(): void {\n    setTimeout(() => {\n      this.router.navigateByUrl('/system', { skipLocationChange: true }).then(() => {\n        this.router.navigate(['/system/report']);\n      });\n    }, 1000);\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub1) {\n      this.sub1.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"title-block\" >\n  <h3 class=\"title pull-left\">\n    Reports <span class=\"sparkline bar\"></span>\n  </h3>\n</div>\n\n<mat-vertical-stepper [linear]=\"isLinear\" #stepper>\n  <mat-step [stepControl]=\"firstFormGroup\">\n    <form [formGroup]=\"firstFormGroup\">\n      <ng-template matStepLabel>Select project</ng-template>\n      <mat-form-field>\n        <label for=\"project\" class=\"control-label\">Project</label>\n        <mat-select formControlName=\"firstCtrl\" required>\n          <mat-option [value]=\"qwe.value\">{{qwe.name}}</mat-option>\n          <mat-option *ngFor=\"let pro of pros\" [value]=\"pro._id\">\n            {{pro.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"secondFormGroup\" label=\"PDF name\">\n    <form [formGroup]=\"secondFormGroup\">\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput formControlName=\"secondCtrl\"\n               required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    <p>Are you ready to print?</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)=\"set()\" [disabled]=\"firstFormGroup.invalid && secondFormGroup.invalid\">Print</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>\n\n<div style=\"position: absolute; left: -1000px; top: 0;\" *ngIf=\"isPrintEv\">\n  <app-history-page style=\"position: absolute; left: -3000px; top: 0;\"\n                    [print]=\"isPrintEv\"\n                    [projectId]=\"proId\"\n                    [printName]=\"printName\"\n                    [projectName]=\"proName\"\n                    (refresh)=\"onRefresh()\"\n  >\n  </app-history-page>\n</div>\n<div style=\"position: absolute; left: -1000px; top: 0;\" *ngIf=\"isPrintCat\">\n  <app-category style=\"position: absolute; left: -3000px; top: 0;\"\n                [print]=\"isPrintCat\"\n                [projectId]=\"proId\"\n                [printName]=\"printName\"\n                [projectName]=\"proName\"\n                (refresh)=\"onRefresh()\"\n  >\n  </app-category>\n</div>\n\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MoneyManager';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../../../shared/models/user.model';\nimport { AuthorizationService } from '../../../../shared/services/authorization.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  date: Date = new Date();\n  user: User;\n\n  constructor(private authService: AuthorizationService,\n              private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(window.localStorage.getItem('user'));\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<!--<header class=\"header\">\n  <div class=\"header-block header-block-search\">\n    {{ date | date: 'dd.MM.yyyy' }}\n  </div>\n  <div class=\"header-block header-block-nav\">\n    <ul class=\"nav-profile\">\n      <li class=\"profile dropdown\" lilDropdown>\n        <a class=\"nav-link dropdown-toggle\"  role=\"button\">\n          <span class=\"name\">\n            Hello, {{ user.name }}\n          </span>\n        </a>\n        <div class=\"dropdown-menu profile-dropdown-menu\">\n          <a class=\"dropdown-item\" [routerLink]=\"['/system','records']\">\n            <i class=\"fa fa-gear icon\"></i>\n            Make a record\n          </a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" (click)=\"onLogout()\">\n            <i class=\"fa fa-power-off icon\"></i>\n            Exit\n          </a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</header>-->\n\n<mat-toolbar color=\"primary\">\n  <button mat-icon-button class=\"example-icon\"  (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n  <h1 class=\"example-app-name\">Responsive App</h1>\n</mat-toolbar>\n\n\n<mat-sidenav #snav mode=\"side\" >\n<span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Autem, nobis.</span>\n</mat-sidenav>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Category} from '../../../../shared/models/category.model';\n\n@Component({\n  selector: 'app-edit-category-form',\n  templateUrl: './edit-category-form.component.html',\n  styleUrls: ['./edit-category-form.component.scss']\n})\nexport class EditCategoryFormComponent implements OnInit {\n\n  public editForm: FormGroup = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(null, Validators.required),\n    income: new FormControl(null, Validators.required),\n    outcome: new FormControl(null, Validators.required),\n    projectId: new FormControl()\n  });\n\n  constructor(public dialogRef: MatDialogRef<EditCategoryFormComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any)\n  {\n    if (data.isNew === false) {\n      this.editForm.patchValue({\n        _id: data.value._id,\n        name: data.value.name,\n        income: data.value.income,\n        outcome: data.value.outcome,\n        projectId: data.value.projectId\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.data.isNew === true) {\n      this.editForm.patchValue({\n        income: 0,\n        outcome: 0\n      });\n    }\n  }\n\n  public onSave(): void {\n    const category = new Category(this.editForm.value);\n    this.dialogRef.close(category);\n  }\n\n  public onCancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{ data.isNew ? 'Add new Category' : 'Edit Category' }}</h1>\n<div mat-dialog-content>\n  <form novalidate [formGroup]=\"editForm\">\n    <div class=\"row\">\n      <div class=\"col col-lg-12\">\n        <div class=\"form-group\">\n          <label for=\"name\" class=\"control-label\">Name</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"name\"/>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"income\" class=\"control-label\">Income</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"income\" [readonly] = true />\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"outcome\" class=\"control-label\">Outcome</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"outcome\" [readonly] = true />\n        </div>\n      </div>\n    </div>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-button style=\"width: 48%\" (click)=\"onCancel()\">Cancel</button>\n  <button mat-button style=\"width: 48%\" (click)=\"onSave()\" [disabled]=\"editForm.invalid\">Save</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {AuthorizationModule} from './authorization/authorization.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthorizationService} from './shared/services/authorization.service';\nimport {SystemModule} from './system/system.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthorizationModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule,\n    SystemModule,\n    MatSidenavModule\n  ],\n  providers: [AuthorizationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-bill-rate',\n  templateUrl: './bill-rate.component.html',\n  styleUrls: ['./bill-rate.component.scss']\n})\nexport class BillRateComponent implements OnInit {\n\n  @Input() currency: any;\n\n  currencies: string[] = ['USD', 'EUR'];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col col-xs-12 col-sm-12 col-md-6 col-xl-6 history-col\">\n  <div class=\"card\">\n    <div class=\"card-block\">\n      <div class=\"title-block\">\n        <h4 class=\"title\">Exchange Rate</h4>\n      </div>\n      <div class=\"row row-sm stats-container\">\n        <table class=\"table table-hover\">\n          <thead>\n          <tr>\n            <th>Currency</th>\n            <th>Rate</th>\n            <th>Date</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <td>PLN</td>\n            <td>1</td>\n            <td>{{ currency.date }}</td>\n          </tr>\n          <tr *ngFor=\"let i of currencies\">\n            <td>{{ i }}</td>\n            <td>{{ currency.rates[i] | number:'.4' }}</td>\n            <td>{{ currency.date }}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { UsersService } from '../../shared/services/user.service';\nimport { Message } from '../../shared/models/message.model';\nimport { AuthorizationService } from '../../shared/services/authorization.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  message: Message;\n\n  constructor(\n    private usersService: UsersService,\n    private authService: AuthorizationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.message = new Message('danger', '');\n    this.route.queryParams\n      .subscribe((params: Params) => {\n        if (params.nowCanLogin){\n          this.openSnackBar('Now u can login!');\n        }\n      });\n\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n    });\n  }\n\n  private openSnackBar(message: string, action?: string): void {\n    this.snackBar.open(message, action, {\n      duration: 7000, verticalPosition : 'bottom'\n    });\n  }\n\n  onSubmit(): void {\n    const formData = this.form.value;\n\n    this.usersService.login(formData)\n      .subscribe((user) => {\n        this.openSnackBar('OK!');\n        window.localStorage.setItem('token', JSON.stringify(user.token));\n        window.localStorage.setItem('user', JSON.stringify(user.userId));\n        this.authService.login();\n        this.router.navigate(['/system', 'bill']);\n      }, (err: HttpErrorResponse) => {\n      this.openSnackBar(err.error.message);\n      this.form.reset();\n    }\n    );\n  }\n}\n","<p class=\"text-xs-center\">Sign in to start work...</p>\n<!--<div\n  class=\"alert alert-{{message.type}}\"\n  *ngIf=\"message.text\"\n>{{message.text}}\n</div>-->\n\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" >\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('email').invalid && form.get('email').touched}\"\n  >\n    <label for=\"email\">Email</label>\n    <kendo-textbox\n      id=\"email\"\n      placeholder=\"Type your email here\"\n      formControlName=\"email\"\n    ></kendo-textbox>\n    <span\n      class=\"form-help-text\"\n      *ngIf=\"form.get('email').invalid && form.get('email').touched\"\n    >\n      <span *ngIf=\"form.get('email')['errors']['required']\">Email cannot be empty.</span>\n      <span *ngIf=\"form.get('email')['errors']['email']\">Enter the correct email.</span>\n    </span>\n  </div>\n  <div\n    class=\"form-group\"\n    [ngClass]=\"{'has-error': form.get('password').invalid && form.get('password').touched}\"\n  >\n    <label for=\"password\">Password</label>\n    <kendo-textbox\n      id=\"password\"\n      placeholder=\"Type your password here\"\n      formControlName=\"password\"\n    ></kendo-textbox>\n    <span\n      class=\"form-help-text\"\n      *ngIf=\"form.get('password').invalid && form.get('password').touched\"\n    >\n      <span *ngIf=\"form.get('password')['errors']['required']\">Password cannot be empty.</span>\n      <span *ngIf=\"form.get('password')['errors']['minlength'] && form.get('password')['errors']['minlength'] ['requiredLength']\">\n        The password must contain at least\n        {{form.get('password')['errors']['minlength'] ['requiredLength']}}\n        characters. Now {{form.get('password')['errors']['minlength'] ['actualLength']}}\n      </span>\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <!--<button\n      type=\"submit\"\n      class=\"btn btn-block btn-primary\"\n      [disabled]=\"form.invalid\"\n    >\n      Enter\n    </button>-->\n    <button mat-raised-button type=\"submit\" [disabled]=\"form.invalid\" color=\"primary\" style=\"width: 100%\">Enter</button>\n  </div>\n  <div class=\"form-group\">\n    <p class=\"text-muted text-xs-center\">\n      Haven't you have an account yet?\n      <br>\n      <a [routerLink]=\"'/registration'\"> Register now!</a>\n    </p>\n  </div>\n</form>\n\n\n<!--<button mat-raised-button type=\"submit\" [disabled]=\"form.invalid\" color=\"primary\" width=\"100%\">Enter</button>-->\n\n<!--<form class=\"example-form\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Favorite food</mat-label>\n    <input matInput placeholder=\"Ex. Pizza\" value=\"Sushi\">\n  </mat-form-field>\n</form>\n<kendo-textbox></kendo-textbox>-->\n\n","export class AuthorizationService {\n\n  private isAuthenticated = false;\n\n  login(): void {\n    this.isAuthenticated = true;\n  }\n\n  logout(): void{\n    this.isAuthenticated = false;\n    window.localStorage.clear();\n  }\n\n  isLoggedIn(): boolean {\n    return this.isAuthenticated;\n  }\n\n}\n","import {BaseApi} from '../../../shared/core/base-api';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Project} from '../models/project.model';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class ProjectService extends BaseApi {\n  constructor(public httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  addProject(project: Project): Observable<Project> {\n    return this.post('projects', project);\n  }\n\n  getProjects(): Observable<Project[]> {\n    return this.get('projects');\n  }\n\n  getActiveProjects(): Observable<Project[]> {\n    return this.get('projects/active');\n  }\n\n  updateProject(project: Project): Observable<Project> {\n    return this.put(`projects/${project._id}`, project);\n  }\n\n  getProjectById(id: string): Observable<Project> {\n    return this.get(`projects/${id}`);\n  }\n\n  deleteProject(id: string): Observable<Project> {\n    return this.delete(`projects/${id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {AuthorizationComponent} from './authorization.component';\nimport {AuthorizationRoutingModule} from './authorization-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {InputsModule} from '@progress/kendo-angular-inputs';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\n\n\n@NgModule({\n  declarations: [\n    AuthorizationComponent,\n    LoginComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthorizationRoutingModule,\n    MatInputModule,\n    InputsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ]\n})\nexport class AuthorizationModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {AuthorizationComponent} from './authorization.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegistrationComponent} from './registration/registration.component';\n\n\nconst routes: Routes = [\n  {path : '', component: AuthorizationComponent, children: [\n      {path : 'login', component: LoginComponent},\n      {path : 'registration', component: RegistrationComponent}\n    ]}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthorizationRoutingModule { }\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {User} from '../models/user.model';\nimport {BaseApi} from '../core/base-api';\n\n\n@Injectable({providedIn: 'root'})\nexport class UsersService extends BaseApi{\n\n  constructor(public httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  public login(user: User): Observable<any> {\n    return this.httpClient.post<any>('http://bilous.website:5000/api/auth/login', user);\n  }\n\n  public createNewUser(user: User): Observable<any> {\n    return this.httpClient.post<any>('http://bilous.website:5000/api/auth/register', user);\n  }\n\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-bill-transfer-form',\n  templateUrl: './bill-transfer-form.component.html',\n  styleUrls: ['./bill-transfer-form.component.scss']\n})\nexport class BillTransferFormComponent implements OnInit {\n\n\n  public transferData = [];\n  public qwe = 1;\n\n  constructor(\n    public dialogRef: MatDialogRef<BillTransferFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any)\n  {\n    this.transferData.push(this.data.bills[0]);\n    this.transferData.push(this.data.bills[1]);\n  }\n\n  ngOnInit(): void {\n  }\n\n  change(): void {\n    this.transferData.reverse();\n  }\n\n  public onSave(): void {\n    const transferEvent = {\n      from: this.transferData[0],\n      to: this.transferData[1],\n      value: this.qwe,\n      rate: this.data.currency\n    };\n    this.dialogRef.close(transferEvent);\n  }\n\n  public onCancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Transfer </h1>\n<div mat-dialog-content class=\"mat-typography\">\n\n    <div class=\"container\">\n    <div class=\"row\">\n\n      <div class=\"col col-xs-12 col-sm-12 col-md-12 col-xl-12\">\n      <mat-card class=\"card-margin\">\n        <mat-card-header>\n          <mat-card-title>\n            <p>{{transferData[0].currency}} Bill</p>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"value\">{{transferData[0].value | number:'1.0-2'}}</div>\n        </mat-card-content>\n        <mat-progress-bar mode=\"determinate\" value=\"100\"></mat-progress-bar>\n      </mat-card>\n    </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col col-xs-12 col-sm-12 col-md-12 col-xl-12\">\n          <div class=\"text-margin\">\n            <h2>Rate: {{data.currency | number:'1.0-3'}}</h2>\n              <kendo-numerictextbox\n                name=\"value\"\n                [min]=\"1\" [autoCorrect]=\"true\"\n                [(ngModel)]=\"qwe\"\n                style=\"margin-bottom: 15px\">\n              </kendo-numerictextbox>\n            <button mat-raised-button color=\"primary\" (click)=\"change()\">\n              <i class=\"fa fa-exchange fa-lg\"></i>\n            </button>\n          </div>\n\n        </div>\n      </div>\n\n      <div class=\"row\">\n      <div class=\"col col-xs-12 col-sm-12 col-md-12 col-xl-12\">\n        <mat-card class=\"card-margin\">\n          <mat-card-header>\n            <mat-card-title>\n              <p>{{transferData[1].currency}} Bill</p>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <div class=\"value\">{{transferData[1].value | number:'1.0-2'}}</div>\n          </mat-card-content>\n          <mat-progress-bar mode=\"determinate\" value=\"100\"></mat-progress-bar>\n        </mat-card>\n      </div>\n      </div>\n\n    </div>\n\n</div>\n<div mat-dialog-actions >\n  <button mat-button style=\"width: 45%\" (click)=\"onCancel()\">Cancel</button>\n  <button mat-button style=\"width: 45%\" (click)=\"onSave()\">Save</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Project} from '../../shared/models/project.model';\n\n@Component({\n  selector: 'app-project-edit-form',\n  templateUrl: './project-edit-form.component.html',\n  styleUrls: ['./project-edit-form.component.scss']\n})\nexport class ProjectEditFormComponent implements OnInit {\n\n  public listBill: Array<string> = ['PLN', 'EUR'];\n\n  public editForm: FormGroup = new FormGroup({\n    _id: new FormControl(),\n    name: new FormControl(null, Validators.required),\n    earnings: new FormControl(null, Validators.required),\n    consumption: new FormControl(null, Validators.required),\n    profit: new FormControl(null, Validators.required),\n    plannedProfit: new FormControl(null, Validators.required),\n    relevance: new FormControl(null, Validators.required),\n    currency: new FormControl(null, Validators.required),\n    active: new FormControl(true)\n  });\n\n  constructor(public dialogRef: MatDialogRef<ProjectEditFormComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any)\n  {\n    if (data.isNew === false) {\n      this.editForm.patchValue({\n        _id: data.value._id,\n        name: data.value.name,\n        earnings: data.value.earnings,\n        consumption: data.value.consumption,\n        profit: data.value.profit,\n        plannedProfit: data.value.plannedProfit,\n        relevance: data.value.relevance,\n        currency: data.value.currency,\n        active: data.value.active\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    console.log(this.data);\n    if (this.data.isNew === true) {\n      this.editForm.patchValue({\n        earnings: 0,\n        consumption: 0,\n        profit: 0,\n        relevance: 0\n      });\n    }\n  }\n\n  public onSave(): void {\n    const category = new Project(this.editForm.value);\n    this.dialogRef.close(category);\n  }\n\n  public onCancel(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{ data.isNew ? 'Add new Project' : 'Edit Project' }}</h1>\n<div mat-dialog-content>\n  <form novalidate [formGroup]=\"editForm\">\n    <div class=\"row\">\n      <div class=\"col col-lg-4\">\n        <div class=\"form-group\">\n          <label for=\"name\" class=\"control-label\">Name</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"name\"/>\n        </div>\n      </div>\n      <div class=\"col col-lg-4\">\n        <div class=\"form-group\">\n          <label for=\"currency\" class=\"control-label\">Currency</label>\n          <kendo-dropdownlist formControlName=\"currency\" [data]=\"listBill\" width=\"100\" [readonly] = !data.isNew>\n          </kendo-dropdownlist>\n        </div>\n      </div>\n      <div class=\"col col-lg-4\">\n        <div class=\"form-group\">\n          <label for=\"plannedProfit\" class=\"control-label\">Planned Profit</label>\n          <kendo-numerictextbox\n            [min]=\"1\" [autoCorrect]=\"true\" formControlName=\"plannedProfit\">\n          </kendo-numerictextbox>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"earnings\" class=\"control-label\">Earnings</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"earnings\" [readonly] = true />\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"consumption\" class=\"control-label\">Consumption</label>\n          <input type=\"text\" class=\"k-textbox\" formControlName=\"consumption\" [readonly] = true />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"profit\" class=\"control-label\">Profit</label>\n          <kendo-numerictextbox\n            formControlName=\"profit\" [readonly] = true>\n          </kendo-numerictextbox>\n        </div>\n      </div>\n      <div class=\"col col-lg-6\">\n        <div class=\"form-group\">\n          <label for=\"relevance\" class=\"control-label\">Relevance</label>\n          <kendo-numerictextbox\n            formControlName=\"relevance\" [readonly] = true>\n          </kendo-numerictextbox>\n        </div>\n      </div>\n    </div>\n\n  </form>\n</div>\n<div mat-dialog-actions>\n  <button mat-button style=\"width: 48%\" (click)=\"onCancel()\">Cancel</button>\n  <button mat-button style=\"width: 48%\" (click)=\"onSave()\" [disabled]=\"editForm.invalid\">Save</button>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {combineLatest, Subscription} from 'rxjs';\nimport {Bill} from '../shared/models/bill.model';\nimport {BillService} from '../shared/services/bill.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {BillTransferFormComponent} from './bill-transfer-form/bill-transfer-form.component';\n\n@Component({\n  selector: 'app-bill',\n  templateUrl: './bill.component.html',\n  styleUrls: ['./bill.component.scss']\n})\nexport class BillComponent implements OnInit, OnDestroy {\n\n  sub1: Subscription;\n  sub2: Subscription;\n\n  currency: any;\n  bill: Bill[];\n  isLoaded = false;\n\n  constructor(private billService: BillService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.sub1 = combineLatest(\n      this.billService.getBill(),\n      this.billService.getCurrency()\n    ).subscribe((data: [Bill[], any]) => {\n      this.bill = data[0];\n      this.currency = data[1];\n      this.isLoaded = true;\n    });\n  }\n\n  onRefresh(): void {\n    this.isLoaded = false;\n    this.ngOnInit();\n  }\n\n  public transfer(): void {\n    const {rates} = this.currency;\n    const qwe = this.bill;\n    const dialogRef = this.dialog.open(BillTransferFormComponent, {\n\n      data: {\n        bills: qwe,\n        currency: rates.EUR\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result != null) {\n        this.billService.transferBill(result).subscribe( () => this.onRefresh());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub1.unsubscribe();\n    if (this.sub2) {\n      this.sub2.unsubscribe();\n    }\n  }\n}\n","<div class=\"pull-left\">\n  <button mat-raised-button color=\"primary\" (click)=\"transfer()\">\n    <i class=\"fa fa-exchange fa-lg\"></i>\n  </button>\n</div>\n<div class=\"pull-right\">\n  <button mat-raised-button color=\"primary\" (click)=\"onRefresh()\">\n    <i class=\"fa fa-refresh fa-lg\"></i>\n  </button>\n</div>\n<div class=\"title-block\">\n  <h3 class=\"title pull-left\">\n    Bill <span class=\"sparkline bar\"></span>\n  </h3>\n</div>\n<section class=\"section\">\n  <mat-spinner style=\"margin-left: 47%;\" *ngIf=\"!isLoaded\"></mat-spinner>\n  <div class=\"row\"*ngIf=\"isLoaded\">\n    <app-bill-card [bill]=\"bill\" [currency]=\"currency\"></app-bill-card>\n    <app-bill-rate [currency]=\"currency\"></app-bill-rate>\n  </div>\n</section>\n","export class HistoryEvent {\n\n  // tslint:disable-next-line:variable-name\n  public _id?: string;\n  public type: string;\n  public amount: number;\n  public project: string;\n  public category: string;\n  public date: Date;\n  public bill: string;\n  public description: string;\n  public userId: string;\n\n  constructor(item?) {\n    if (item != null) {\n      this._id = item._id;\n      this.type = item.type;\n      this.amount = item.amount;\n      this.project = item.project;\n      this.category = item.category;\n      this.date = item.date;\n      this.bill = item.bill;\n      this.description = item.description;\n      this.userId = item.userId;\n    }\n  }\n}\n","export class Category {\n\n  // tslint:disable-next-line:variable-name\n  public _id?: string;\n  public name: string;\n  public income: number;\n  public outcome: number;\n  public projectId: string;\n  public userId: string;\n\n\n  constructor(item?) {\n    if (item != null) {\n      this._id = item._id;\n      this.name = item.name;\n      this.income = item.income;\n      this.outcome = item.outcome;\n      this.projectId = item.projectId;\n      this.userId = item.userId;\n    }\n  }\n}\n\nexport class ChartCategory {\n\n  public name: string;\n  public value: number;\n\n  constructor(category: Category, type: string) {\n    if (category != null) {\n      if (type === 'income') {\n        this.name = category.name;\n        this.value = category.income;\n      } else if (type === 'outcome') {\n        this.name = category.name;\n        this.value = category.outcome;\n      } else\n        {\n          return null;\n        }\n    }\n  }\n}\n","import {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport {Router} from '@angular/router';\nimport {AuthorizationService} from '../shared/services/authorization.service';\n\n@Component({\n  selector: 'app-system',\n  templateUrl: './system.component.html',\n  styleUrls: ['./system.component.scss']\n})\nexport class SystemComponent implements OnInit, OnDestroy {\n\n  mobileQuery: MediaQueryList;\n\n  date: Date = new Date();\n\n  // tslint:disable-next-line:variable-name\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher,\n              private authService: AuthorizationService,\n              private router: Router) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onLogout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n}\n","<div class=\"main-wrapper\">\n  <div class=\"app\" [class.example-is-mobile]=\"mobileQuery.matches\">\n    <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n      <button mat-icon-button class=\"example-icon\" aria-label=\"icon-button with menu icon\" (click)=\"snav.toggle()\"><mat-icon>menu</mat-icon></button>\n      <h1>Money Manager</h1>\n      <span class=\"example-spacer\"></span>\n      <button mat-raised-button (click)=\"onLogout()\">\n        Logout\n      </button>\n    </mat-toolbar>\n\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n\n    <mat-sidenav #snav mode=\"side\" class=\"side\" [mode]=\"mobileQuery.matches ? 'over' : 'side'\" >\n      <mat-nav-list>\n        <mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/system','bill']\">\n          <mat-icon mat-list-icon>account_balance_wallet</mat-icon>\n          <a matLine > Bill </a>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/system','history']\">\n          <mat-icon mat-list-icon>history</mat-icon>\n          <a matLine > History </a>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/system','project']\">\n          <mat-icon mat-list-icon>work</mat-icon>\n          <a matLine > Projects </a>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n        <mat-list-item routerLinkActive=\"active\" [routerLink]=\"['/system','report']\">\n          <mat-icon mat-list-icon>print</mat-icon>\n          <a matLine > Reports </a>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n      <article class=\"content dashboard-page\">\n        <router-outlet></router-outlet>\n      </article>\n    </mat-sidenav-content>\n\n    </mat-sidenav-container>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path : '', redirectTo: 'login', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SystemRoutingModule } from './system-routing.module';\nimport { SystemComponent } from './system.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\nimport { BillComponent } from './bill/bill.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport { BillCardComponent } from './bill/bill-card/bill-card.component';\nimport {BillService} from './shared/services/bill.service';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatCardModule} from '@angular/material/card';\nimport { BillRateComponent } from './bill/bill-rate/bill-rate.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { HistoryPageComponent } from './history-page/history-page.component';\nimport {BodyModule, ColumnResizingService, GridModule, PDFModule, SharedModule} from '@progress/kendo-angular-grid';\nimport {EventsService} from './shared/services/event.service';\nimport {CategoriesService} from './shared/services/category.service';\nimport {ButtonModule} from '@progress/kendo-angular-buttons';\nimport { EditHistoryFormComponent } from './history-page/edit-history-form/edit-history-form.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogModule } from '@progress/kendo-angular-dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport {DropDownsModule} from '@progress/kendo-angular-dropdowns';\nimport {DatePickerModule} from '@progress/kendo-angular-dateinputs';\nimport {NumericTextBoxModule} from '@progress/kendo-angular-inputs';\nimport {ProjectService} from './shared/services/project.service';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ProjectComponent } from './project/project.component';\nimport { ProjectDetailComponent } from './project/project-detail/project-detail.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { ProjectChartsComponent } from './project/project-charts/project-charts.component';\nimport {PieChartModule} from '@swimlane/ngx-charts';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { CategoryComponent } from './project/project-detail/category/category.component';\nimport { EditCategoryFormComponent } from './project/project-detail/category/edit-category-form/edit-category-form.component';\nimport { BillTransferFormComponent } from './bill/bill-transfer-form/bill-transfer-form.component';\nimport { ProjectEditFormComponent } from './project/project-edit-form/project-edit-form.component';\nimport {PDFExportModule} from '@progress/kendo-angular-pdf-export';\nimport { ReportComponent } from './report/report.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SystemRoutingModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatTableModule,\n    GridModule,\n    BodyModule,\n    SharedModule,\n    ButtonModule,\n    MatDialogModule,\n    DialogModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    DropDownsModule,\n    DatePickerModule,\n    NumericTextBoxModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    PieChartModule,\n    MatTabsModule,\n    FormsModule,\n    PDFExportModule,\n    PDFModule,\n    MatStepperModule,\n    MatInputModule,\n    MatSlideToggleModule\n  ],\n  declarations: [\n    SystemComponent,\n    HeaderComponent,\n    NavbarComponent,\n    BillComponent,\n    BillCardComponent,\n    BillRateComponent,\n    HistoryPageComponent,\n    EditHistoryFormComponent,\n    ProjectComponent,\n    ProjectDetailComponent,\n    ProjectChartsComponent,\n    CategoryComponent,\n    EditCategoryFormComponent,\n    BillTransferFormComponent,\n    ProjectEditFormComponent,\n    ReportComponent\n  ],\n  providers: [BillService, ColumnResizingService, EventsService, CategoriesService, ProjectService]\n})\nexport class SystemModule {}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\n\nimport {SystemComponent} from './system.component';\nimport {BillComponent} from './bill/bill.component';\nimport {HistoryPageComponent} from './history-page/history-page.component';\nimport {ProjectComponent} from './project/project.component';\nimport {ProjectDetailComponent} from './project/project-detail/project-detail.component';\nimport {ReportComponent} from './report/report.component';\n\n\nconst routes: Routes = [\n  {path : 'system', component: SystemComponent, children: [\n      {path : 'bill', component: BillComponent},\n      {path : 'history', component: HistoryPageComponent},\n      {path : 'project', component: ProjectComponent},\n      {path : 'project/:id', component: ProjectDetailComponent},\n      {path : 'report', component: ReportComponent}\n    ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class SystemRoutingModule {\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}